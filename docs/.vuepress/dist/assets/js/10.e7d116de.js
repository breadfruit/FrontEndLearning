(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{404:function(t,a,e){t.exports=e.p+"assets/img/lianbiao.97d6779e.png"},426:function(t,a,e){"use strict";e.r(a);var r=e(2),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#algorithm"}},[t._v("#")]),t._v(" Algorithm：")]),t._v(" "),a("h4",{attrs:{id:"_328-奇偶链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_328-奇偶链表"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/odd-even-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("328. 奇偶链表"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("解题思路：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("因为是奇偶索引的节点进行排序后，进行奇-偶拼接，所以还需要指向偶链表的指针。")])]),t._v(" "),a("li",[a("p",[t._v("维护两个指针 "),a("code",[t._v("odd")]),t._v(" 和 "),a("code",[t._v("even")]),t._v(" 分别指向奇数节点和偶数节点。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:e(404),alt:"An image"}})]),t._v(" "),a("h4",{attrs:{id:"_148-排序链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_148-排序链表"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/sort-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("148. 排序链表"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("解题思路：")]),t._v(" "),a("p",[t._v("采用自顶向下进行归并排序：")]),t._v(" "),a("ol",[a("li",[t._v("利用快慢双指针进行拆飞链表")]),t._v(" "),a("li",[t._v("对两个链表进行排序")]),t._v(" "),a("li",[t._v("合并两个链表")])]),t._v(" "),a("h2",{attrs:{id:"review-独立-transform-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#review-独立-transform-属性"}},[t._v("#")]),t._v(" Review： "),a("a",{attrs:{href:"https://web.dev/css-individual-transform-properties/",target:"_blank",rel:"noopener noreferrer"}},[t._v("独立 transform 属性"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("独立 transform 属性： translate， rotate，scale。已在 Chrome 104、Safari 和 Firefox 已支持（Edge 暂不支持）。并且在@keyframes 中可以直接针对transform的每个特性进行转换，不用计算中间复杂值。")]),t._v(" "),a("p",[t._v("以前的写法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".target {\n  transform: translateX(50%) rotate(30deg) scale(1.2);\n}\n@keyframes anim {\n  0% { transform: translateX(0%); }\n  5% { transform: translateX(5%) rotate(90deg) scale(1.2); }\n  10% { transform: translateX(10%) rotate(180deg) scale(1.2); }\n  90% { transform: translateX(90%) rotate(180deg) scale(1.2); }\n  95% { transform: translateX(95%) rotate(270deg) scale(1.2); }\n  100% { transform: translateX(100%) rotate(360deg); }\n}\n")])])]),a("p",[t._v("现在的写法：")]),t._v(" "),a("p",[t._v("其中无论写的顺序如何，最终都是按translate -> rotate ->scale进行编译。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".target {\n  translate: 50% 0;\n  rotate: 30deg;\n  scale: 1.2;\n}\n@keyframes anim {\n  0% { translate: 0% 0; }\n  100% { translate: 100% 0; }\n\n  0%, 100% { scale: 1; }\n  5%, 95% { scale: 1.2; }\n\n  0% { rotate: 0deg; }\n  10%, 90% { rotate: 180deg; }\n  100% { rotate: 360deg; }\n}\n")])])]),a("h2",{attrs:{id:"review-import-maps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#review-import-maps"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Review："),a("a",{attrs:{href:"https://www.honeybadger.io/blog/import-maps/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Import maps"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("新增js对于第三方包的导入方式，相比较与之前的")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<script type=\"module\">\n  import dayjs from 'dayjs';\n\n  console.log(dayjs('2019-01-25').format('YYYY-MM-DDTHH:mm:ssZ[Z]'));\n<\/script>\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const dayjs = require('dayjs') // CommonJS\n\nimport dayjs from 'dayjs'; // webpack\n")])])]),a("p",[t._v("import maps支持：")]),t._v(" "),a("ol",[a("li",[t._v("cdn， 文件， 包")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script type="importmap">\n{\n  "imports": {\n    "react": "https://cdn.skypack.dev/react@17.0.1",\n    "react-dom": "https://cdn.skypack.dev/react-dom",\n    "square": "./modules/square.js",\n    "lodash": "/node_modules/lodash-es/lodash.js"\n  }\n}\n<\/script>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("支持整个包引入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script type="importmap">\n{\n  "imports": {\n    "lodash/": "/node_modules/lodash-es/"\n  }\n}\n<\/script>\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("动态引入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<script>\n  const importMap = {\n    imports: {\n      lazyload: 'IntersectionObserver' in window\n        ? './lazyload.js'\n        : './lazyload-fallback.js',\n    },\n  };\n\n  const im = document.createElement('script');\n  im.type = 'importmap';\n  im.textContent = JSON.stringify(importMap);\n  document.currentScript.after(im);\n<\/script>\n\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("引入文件，url是相对路径")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script type="importmap" src="importmap.json"><\/script>\n')])])]),a("p",[t._v("对于浏览器是否支持这个特性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if (HTMLScriptElement.supports && HTMLScriptElement.supports('importmap')) {\n  // import maps is supported\n}\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);