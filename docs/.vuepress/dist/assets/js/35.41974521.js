(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{442:function(e,t,r){"use strict";r.r(t);var a=r(3),o=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"algorithm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#algorithm"}},[e._v("#")]),e._v(" Algorithm：")]),e._v(" "),t("h4",{attrs:{id:"_875-爱吃香蕉的珂珂"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_875-爱吃香蕉的珂珂"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://leetcode.cn/problems/koko-eating-bananas/",target:"_blank",rel:"noopener noreferrer"}},[e._v("875. 爱吃香蕉的珂珂"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("珂珂喜欢吃香蕉。这里有 n 堆香蕉，第 i 堆中有 piles[i] 根香蕉。警卫已经离开了，将在 h 小时后回来。")]),e._v(" "),t("p",[e._v("珂珂可以决定她吃香蕉的速度 k （单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 k 根。如果这堆香蕉少于 k 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。")]),e._v(" "),t("p",[e._v("珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。")]),e._v(" "),t("p",[e._v("返回她可以在 h 小时内吃掉所有香蕉的最小速度 k（k 为整数）。")]),e._v(" "),t("h4",{attrs:{id:"解题思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[e._v("#")]),e._v(" 解题思路：")]),e._v(" "),t("p",[e._v("需要在一定的时间内找到每小时吃掉最少香蕉的速度v，可以在1-需要吃掉最多香蕉中需找最小值。")]),e._v(" "),t("h4",{attrs:{id:"_91-解码方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_91-解码方法"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://leetcode.cn/problems/decode-ways/",target:"_blank",rel:"noopener noreferrer"}},[e._v("91. 解码方法"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"解题思路-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题思路-2"}},[e._v("#")]),e._v(" 解题思路：")]),e._v(" "),t("p",[e._v("利用动态规划，dp[i]表示对当前第i位有几种解码方式。")]),e._v(" "),t("p",[e._v("考虑临界点状态：当为”0“时，")]),e._v(" "),t("p",[e._v("单数： 当前不为“0”时，转换方程 dp[i] = dp[i-1]")]),e._v(" "),t("p",[e._v("双数： 当前能与前一位数进行解码，需要考虑前一位是“2”时，注意解码范围：20-26；为“1”时，都可以；为“0”。")]),e._v(" "),t("h2",{attrs:{id:"stop-the-screen-going-to-sleep-with-javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stop-the-screen-going-to-sleep-with-javascript"}},[e._v("#")]),e._v(" Stop The Screen Going To Sleep With JavaScript")]),e._v(" "),t("p",[t("strong",[e._v("使用 JavaScript 阻止屏幕进入睡眠状态")]),e._v(" — 本篇文章主要解释如何使用屏幕调用锁定屏幕 API=> "),t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("Screen Wake Lock API"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wakeLock.release() // 返回一个promise对象\n")])])]),t("p",[e._v("接口API")]),e._v(" "),t("ol",[t("li",[e._v("返回一个 "),t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/WakeLock",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("WakeLock")]),t("OutboundLink")],1),e._v(" 对象实例，从中可以访问所有其他功能。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("navigator.wakeLock\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/WakeLockSentinel",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("WakeLockSentinel")]),t("OutboundLink")],1),e._v("（navigator.wakeLock.request() || wakelock.request）")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/WakeLock",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("WakeLock")]),t("OutboundLink")],1)])])]),e._v(" "),t("h2",{attrs:{id:"quickreader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quickreader"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/EtherDream/QuickReader",target:"_blank",rel:"noopener noreferrer"}},[e._v("QuickReader"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("适用于浏览器和 Node 的高性能流读取器— 这个想法是通过流(stream)在下载的同时读取指定格式的数据，而不必等待下载完成才能进行读取。")]),e._v(" "),t("p",[e._v("可以用来实现读取文件时，进度条的读取进度显示。")])])}),[],!1,null,null,null);t.default=o.exports}}]);